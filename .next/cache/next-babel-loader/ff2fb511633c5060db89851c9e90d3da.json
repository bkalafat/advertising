{"ast":null,"code":"var _jsxFileName = \"D:\\\\next\\\\oni\\\\components\\\\cards\\\\card.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { Card, CardText, CardTitle, Col, Row, CardImg, CardBody, Badge } from \"reactstrap\";\nimport \"./card.scss\";\nimport Loader from \"react-loader-spinner\";\nimport { ProductContext } from \"../../pages/oniContext\";\n\nconst domLoaded = require(\"dom-loaded\"); //p = props\n\n\nexport const CardComp = props => {\n  const productConsumer = useContext(ProductContext);\n  const {\n    0: loading,\n    1: setloading\n  } = useState(true);\n  const {\n    0: imageloading,\n    1: setimageloading\n  } = useState(true);\n\n  const handleImages = imageName => {\n    packageImages.map((image, index) => {\n      let packageTitle = p.title.toLowerCase();\n\n      if (packageTitle.includes(image.uID)) {\n        return image.src;\n      } else {\n        console.log(p.title, image.uID);\n      }\n\n      switch (imageName) {\n        case value:\n          break;\n\n        default:\n          break;\n      }\n    });\n  };\n\n  useEffect(() => {\n    (async () => {\n      await domLoaded;\n      setloading(false);\n    })();\n  }, [loading]);\n  const p = props;\n\n  if (!loading) {\n    return __jsx(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, __jsx(CardImg, {\n      top: true,\n      onLoad: () => {\n        setimageloading(false);\n      },\n      width: \"100%\",\n      src: p.image,\n      alt: \"Card image cap\",\n      className: !imageloading ? \"\" : \"display-none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }), imageloading && __jsx(\"div\", {\n      className: \"image-loader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, \" \", __jsx(Loader, {\n      type: \"Triangle\",\n      color: \"#e100ff \",\n      height: 50,\n      width: 50,\n      timeout: 99000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    })), __jsx(CardBody, {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, __jsx(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, p.title), __jsx(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, p.text, __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }), __jsx(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }, p.addOns.map(addOn => __jsx(Badge, {\n      className: \"badge\",\n      color: \"primary\",\n      pill: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 33\n      }\n    }, addOn))), __jsx(\"button\", {\n      onClick: () => productConsumer.handleFinalPackage(p.package),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, \" click me \")), \" \"));\n  } else {\n    return __jsx(\"div\", {\n      className: \"theme-loader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, __jsx(Loader, {\n      type: \"Triangle\",\n      color: \"#e100ff \",\n      height: 50,\n      width: 50,\n      timeout: 3000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }));\n  }\n};","map":{"version":3,"sources":["D:/next/oni/components/cards/card.js"],"names":["React","useEffect","useState","useContext","Card","CardText","CardTitle","Col","Row","CardImg","CardBody","Badge","Loader","ProductContext","domLoaded","require","CardComp","props","productConsumer","loading","setloading","imageloading","setimageloading","handleImages","imageName","packageImages","map","image","index","packageTitle","p","title","toLowerCase","includes","uID","src","console","log","value","text","addOns","addOn","handleFinalPackage","package"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport { Card, CardText, CardTitle, Col, Row, CardImg, CardBody, Badge } from \"reactstrap\";\nimport \"./card.scss\";\nimport Loader from \"react-loader-spinner\";\nimport { ProductContext } from \"../../pages/oniContext\";\n\nconst domLoaded = require(\"dom-loaded\");\n\n//p = props\nexport const CardComp = (props) => {\n    const productConsumer = useContext(ProductContext);\n    const [loading, setloading] = useState(true);\n    const [imageloading, setimageloading] = useState(true);\n    const handleImages = (imageName) => {\n        packageImages.map((image, index) => {\n            let packageTitle = p.title.toLowerCase();\n            if (packageTitle.includes(image.uID)) {\n                return image.src;\n            } else {\n                console.log(p.title, image.uID);\n            }\n            switch (imageName) {\n                case value:\n                    break;\n\n                default:\n                    break;\n            }\n        });\n    };\n    useEffect(() => {\n        (async () => {\n            await domLoaded;\n            setloading(false);\n        })();\n    }, [loading]);\n    const p = props;\n\n    if (!loading) {\n        return (\n            <Card>\n                <CardImg\n                    top\n                    onLoad={() => {\n                        setimageloading(false);\n                    }}\n                    width=\"100%\"\n                    src={p.image}\n                    alt=\"Card image cap\"\n                    className={!imageloading ? \"\" : \"display-none\"}\n                />\n                {imageloading && (\n                    <div className=\"image-loader\">\n                        {\" \"}\n                        <Loader type=\"Triangle\" color=\"#e100ff \" height={50} width={50} timeout={99000} />\n                    </div>\n                )}\n                <CardBody className=\"text-center\">\n                    <CardTitle>{p.title}</CardTitle>\n                    <CardText>\n                        {p.text}\n                        <br />\n                        <div className=\"text-center\">\n                            {p.addOns.map((addOn) => (\n                                <Badge className=\"badge\" color=\"primary\" pill>\n                                    {addOn}\n                                </Badge>\n                            ))}\n                        </div>\n                        <button onClick={() => productConsumer.handleFinalPackage(p.package)}> click me </button>\n                    </CardText>{\" \"}\n                </CardBody>\n            </Card>\n        );\n    } else {\n        return (\n            <div className=\"theme-loader\">\n                <Loader type=\"Triangle\" color=\"#e100ff \" height={50} width={50} timeout={3000} />\n            </div>\n        );\n    }\n};\n"]},"metadata":{},"sourceType":"module"}